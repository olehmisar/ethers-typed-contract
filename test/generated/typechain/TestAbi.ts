/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { EventFragment, FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { OnEvent, TypedEvent, TypedEventFilter, TypedListener } from "./common";

export interface TestAbiInterface extends utils.Interface {
  contractName: "TestAbi";
  functions: {
    "argsNoReturn(uint256,address)": FunctionFragment;
    "argsOneReturn(uint256,address)": FunctionFragment;
    "argsTupleReturn(uint256,address)": FunctionFragment;
    "differentTypes(address,uint256,int256,bool,string)": FunctionFragment;
    "noArgsNoReturn()": FunctionFragment;
    "payableArgsNoReturn(uint256,address)": FunctionFragment;
    "payableArgsOneReturn(uint256,address)": FunctionFragment;
    "payableArgsTupleReturn(uint256,address)": FunctionFragment;
    "payableNoArgsNoReturn()": FunctionFragment;
    "pureArgsNoReturn(uint256,address)": FunctionFragment;
    "pureArgsOneReturn(uint256,address)": FunctionFragment;
    "pureArgsTupleReturn(uint256,address)": FunctionFragment;
    "pureNoArgsNoReturn()": FunctionFragment;
    "viewArgsNoReturn(uint256,address)": FunctionFragment;
    "viewArgsOneReturn(uint256,address)": FunctionFragment;
    "viewArgsTupleReturn(uint256,address)": FunctionFragment;
    "viewNoArgsNoReturn()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "argsNoReturn",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "argsOneReturn",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "argsTupleReturn",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "differentTypes",
    values: [string, BigNumberish, BigNumberish, boolean, string]
  ): string;
  encodeFunctionData(
    functionFragment: "noArgsNoReturn",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "payableArgsNoReturn",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "payableArgsOneReturn",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "payableArgsTupleReturn",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "payableNoArgsNoReturn",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "pureArgsNoReturn",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "pureArgsOneReturn",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "pureArgsTupleReturn",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "pureNoArgsNoReturn",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "viewArgsNoReturn",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "viewArgsOneReturn",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "viewArgsTupleReturn",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "viewNoArgsNoReturn",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "argsNoReturn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "argsOneReturn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "argsTupleReturn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "differentTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "noArgsNoReturn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "payableArgsNoReturn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "payableArgsOneReturn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "payableArgsTupleReturn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "payableNoArgsNoReturn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pureArgsNoReturn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pureArgsOneReturn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pureArgsTupleReturn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pureNoArgsNoReturn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "viewArgsNoReturn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "viewArgsOneReturn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "viewArgsTupleReturn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "viewNoArgsNoReturn",
    data: BytesLike
  ): Result;

  events: {
    "Indexed(address,uint256,bool)": EventFragment;
    "NoArgs()": EventFragment;
    "OneArg(address)": EventFragment;
    "TwoArgs(address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Indexed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NoArgs"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OneArg"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TwoArgs"): EventFragment;
}

export type IndexedEvent = TypedEvent<
  [string, BigNumber, boolean],
  { a: string; u: BigNumber; b: boolean }
>;

export type IndexedEventFilter = TypedEventFilter<IndexedEvent>;

export type NoArgsEvent = TypedEvent<[], {}>;

export type NoArgsEventFilter = TypedEventFilter<NoArgsEvent>;

export type OneArgEvent = TypedEvent<[string], { a: string }>;

export type OneArgEventFilter = TypedEventFilter<OneArgEvent>;

export type TwoArgsEvent = TypedEvent<
  [string, BigNumber],
  { a: string; u: BigNumber }
>;

export type TwoArgsEventFilter = TypedEventFilter<TwoArgsEvent>;

export interface TestAbi extends BaseContract {
  contractName: "TestAbi";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: TestAbiInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    argsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    argsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    argsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    differentTypes(
      a: string,
      u: BigNumberish,
      i: BigNumberish,
      b: boolean,
      s: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    noArgsNoReturn(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    payableArgsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    payableArgsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    payableArgsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    payableNoArgsNoReturn(
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    pureArgsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<[void]>;

    pureArgsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    pureArgsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, string]>;

    pureNoArgsNoReturn(overrides?: CallOverrides): Promise<[void]>;

    viewArgsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<[void]>;

    viewArgsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    viewArgsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, string]>;

    viewNoArgsNoReturn(overrides?: CallOverrides): Promise<[void]>;
  };

  argsNoReturn(
    a: BigNumberish,
    b: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  argsOneReturn(
    a: BigNumberish,
    b: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  argsTupleReturn(
    a: BigNumberish,
    b: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  differentTypes(
    a: string,
    u: BigNumberish,
    i: BigNumberish,
    b: boolean,
    s: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  noArgsNoReturn(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  payableArgsNoReturn(
    a: BigNumberish,
    b: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  payableArgsOneReturn(
    a: BigNumberish,
    b: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  payableArgsTupleReturn(
    a: BigNumberish,
    b: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  payableNoArgsNoReturn(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  pureArgsNoReturn(
    a: BigNumberish,
    b: string,
    overrides?: CallOverrides
  ): Promise<void>;

  pureArgsOneReturn(
    a: BigNumberish,
    b: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  pureArgsTupleReturn(
    a: BigNumberish,
    b: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, string]>;

  pureNoArgsNoReturn(overrides?: CallOverrides): Promise<void>;

  viewArgsNoReturn(
    a: BigNumberish,
    b: string,
    overrides?: CallOverrides
  ): Promise<void>;

  viewArgsOneReturn(
    a: BigNumberish,
    b: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  viewArgsTupleReturn(
    a: BigNumberish,
    b: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, string]>;

  viewNoArgsNoReturn(overrides?: CallOverrides): Promise<void>;

  callStatic: {
    argsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<void>;

    argsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    argsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, string]>;

    differentTypes(
      a: string,
      u: BigNumberish,
      i: BigNumberish,
      b: boolean,
      s: string,
      overrides?: CallOverrides
    ): Promise<void>;

    noArgsNoReturn(overrides?: CallOverrides): Promise<void>;

    payableArgsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<void>;

    payableArgsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    payableArgsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, string]>;

    payableNoArgsNoReturn(overrides?: CallOverrides): Promise<void>;

    pureArgsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<void>;

    pureArgsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pureArgsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, string]>;

    pureNoArgsNoReturn(overrides?: CallOverrides): Promise<void>;

    viewArgsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<void>;

    viewArgsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    viewArgsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, string]>;

    viewNoArgsNoReturn(overrides?: CallOverrides): Promise<void>;
  };

  filters: {
    "Indexed(address,uint256,bool)"(
      a?: string | null,
      u?: null,
      b?: boolean | null
    ): IndexedEventFilter;
    Indexed(
      a?: string | null,
      u?: null,
      b?: boolean | null
    ): IndexedEventFilter;

    "NoArgs()"(): NoArgsEventFilter;
    NoArgs(): NoArgsEventFilter;

    "OneArg(address)"(a?: null): OneArgEventFilter;
    OneArg(a?: null): OneArgEventFilter;

    "TwoArgs(address,uint256)"(a?: null, u?: null): TwoArgsEventFilter;
    TwoArgs(a?: null, u?: null): TwoArgsEventFilter;
  };

  estimateGas: {
    argsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    argsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    argsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    differentTypes(
      a: string,
      u: BigNumberish,
      i: BigNumberish,
      b: boolean,
      s: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    noArgsNoReturn(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    payableArgsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    payableArgsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    payableArgsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    payableNoArgsNoReturn(
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    pureArgsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pureArgsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pureArgsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pureNoArgsNoReturn(overrides?: CallOverrides): Promise<BigNumber>;

    viewArgsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    viewArgsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    viewArgsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    viewNoArgsNoReturn(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    argsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    argsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    argsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    differentTypes(
      a: string,
      u: BigNumberish,
      i: BigNumberish,
      b: boolean,
      s: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    noArgsNoReturn(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    payableArgsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    payableArgsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    payableArgsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    payableNoArgsNoReturn(
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    pureArgsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pureArgsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pureArgsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pureNoArgsNoReturn(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    viewArgsNoReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    viewArgsOneReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    viewArgsTupleReturn(
      a: BigNumberish,
      b: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    viewNoArgsNoReturn(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
